version: 2.1
orbs:
  browser-tools: circleci/browser-tools@1.2.3
  build-tools: circleci/build-tools@2.6.3
  jq: circleci/jq@1.9.1
  ruby: circleci/ruby@1.1.4
  node: circleci/node@4.7.0

executors:
  default:
    working_directory: ~/aniboard
    docker:
      - image: cimg/ruby:2.6.6-browsers
      - image: circleci/postgres:9.5-alpine
        environment:
          POSTGRES_USER: app_user
          POSTGRES_DB: Aniboard_portfolio_test
          POSTGRES_PASSWORD: "postgres"
    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      PGHOST: 127.0.0.1
      PGUSER: app_user
      PGPASSWORD: "postgres"
      RAILS_ENV: test

commands:
  setup:
    steps:
      - checkout
      - build-tools/install-ci-tools
      - jq/install
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      # - install-node-example
      - node/install:
          install-yarn: true
      - run:
          name: Check install
          command: |
            google-chrome --version
            chromedriver --version

jobs:
  rspec:
    executor: default
    steps:
      - setup
      - ruby/install-deps
      - run: bundle exec rails db:schema:load --trace
      - ruby/rspec-test

  rubocop:
    executor: default
    steps:
      - checkout
      - ruby/install-deps
      - ruby/rubocop-check

  heroku_deploy:
    working_directory: ~/aniboard
    docker:
      - image: sue445/heroku-cli
    steps:
      - checkout
      - build-tools/install-ci-tools
      - jq/install
      - run:
          name: Identify who I am
          command: echo 'export MY_EMAIL=`heroku auth:whoami | tail -n 1`' >> $BASH_ENV
      - run:
          name: Identify Heroku app names to destroy
          command: echo 'export APP_NAMES_TO_REMOVE=`heroku apps --json | jq -r "map(select(.owner.email == "\"$MY_EMAIL\"" and (.name | contains(\"aniboard\")))) | sort_by(.updated_at) | reverse | .[5:] | .[].name"`' >> $BASH_ENV
      - run:
          name: Delete old apps if needed
          command: for app_name in $APP_NAMES_TO_REMOVE; do heroku apps:destroy -a $app_name -c $app_name; done
      - run:
          name: Identify current branch name
          command: echo 'export CURRENT_BRANCH_NAME=`git rev-parse --abbrev-ref HEAD`' >> $BASH_ENV
      - run:
          name: Define Heroku app name to create
          command: timestamp=`date +%Y%m%d%H%M%S` && echo "export HEROKU_APP_NAME=potepanec-$timestamp" >> $BASH_ENV
      - run:
          name: Create fresh Heroku app
          command: heroku apps:create $HEROKU_APP_NAME --stack heroku-20
      - run:
          name: Deploy
          command: git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git $CURRENT_BRANCH_NAME:master
      - run:
          name: Run post-deploy tasks
          command: |
            heroku config:set AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
            heroku run bin/rails db:migrate
            heroku run bin/rails db:seed
workflows:
  build:
    jobs:
      - rspec
      - rubocop
      - heroku_deploy:
          requires:
            - rspec
            - rubocop

